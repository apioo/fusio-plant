{
  "definitions": {
    "Collection": {
      "description": "A collection of things",
      "type": "struct",
      "properties": {
        "totalResults": {
          "type": "integer"
        },
        "entry": {
          "type": "array",
          "items": {
            "type": "generic",
            "name": "T"
          }
        }
      }
    },
    "Message": {
      "description": "Contains a message whether the operation was successful or not",
      "type": "struct",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "output": {
          "type": "string"
        }
      }
    },
    "Project": {
      "description": "A project is logical unit which contains multiple apps i.e. a backend and database app",
      "type": "struct",
      "properties": {
        "name": {
          "type": "string"
        },
        "apps": {
          "type": "array",
          "schema": {
            "type": "reference",
            "target": "Project_App"
          }
        },
        "updateDate": {
          "type": "string",
          "format": "date-time"
        },
        "insertDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Project_App": {
      "description": "An app of a project",
      "type": "struct",
      "properties": {
        "name": {
          "description": "Name of your app i.e. backend or database must be unique within the project",
          "type": "string"
        },
        "image": {
          "description": "Name of the docker image i.e. mysql:8.0",
          "type": "string"
        },
        "domains": {
          "description": "Optional a list of domains for this app",
          "type": "array",
          "schema": {
            "type": "string"
          }
        },
        "cache": {
          "description": "Optional if a domain was provided indicates whether nginx content caching is activated, this can heavily improve the performance of your service, should be used for every readonly app otherwise you need to think about cache invalidation",
          "type": "boolean"
        },
        "port": {
          "description": "Optional if a domain was provided the internal port of the docker image which is exposed, if not provided port 80 is assumed",
          "type": "integer"
        },
        "environment": {
          "description": "Environment variables provided to the docker image",
          "type": "map",
          "schema": {
            "type": "string"
          }
        },
        "volumes": {
          "description": "List of volumes which should be mounted to persist content",
          "type": "array",
          "schema": {
            "type": "reference",
            "target": "Project_App_Volume"
          }
        },
        "links": {
          "description": "List of links to other apps",
          "type": "array",
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "Project_App_Volume": {
      "description": "An app volume mounted on the server",
      "type": "struct",
      "properties": {
        "source": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        }
      }
    },
    "Project_Collection": {
      "description": "A collection of all projects",
      "parent": {
        "type": "reference",
        "target": "Collection",
        "template": {
          "T": "Project"
        }
      }
    },
    "Command": {
      "type": "struct",
      "base": true,
      "properties": {
        "type": {
          "type": "string"
        }
      },
      "discriminator": "type",
      "mapping": {
        "Command_Setup": "setup",
        "Command_Remove": "remove",
        "Command_Certbot": "certbot",
        "Command_Pull": "pull",
        "Command_Up": "up",
        "Command_Down": "down",
        "Command_Logs": "logs",
        "Command_Ps": "ps",
        "Command_Stats": "stats",
        "Command_Login": "login"
      }
    },
    "Command_Setup": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Command"
      },
      "properties": {
        "name": {
          "type": "string"
        },
        "compose": {
          "type": "string"
        },
        "nginx": {
          "type": "string"
        }
      }
    },
    "Command_Remove": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Command"
      },
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Command_Certbot": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Command"
      },
      "properties": {
        "domains": {
          "type": "array",
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "Command_Pull": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Command"
      },
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Command_Up": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Command"
      },
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Command_Down": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Command"
      },
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Command_Logs": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Command"
      },
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Command_Ps": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Command"
      },
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Command_Stats": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Command"
      },
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "Command_Login": {
      "type": "struct",
      "parent": {
        "type": "reference",
        "target": "Command"
      },
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  }
}